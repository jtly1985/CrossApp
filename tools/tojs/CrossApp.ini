[CrossApp]
prefix = autogentestbindings_js

#classes = CAView CAWindow CAWebView CAWebViewDelegate CATouchView CATextToolBarView CATextSelectView CATextSelViewEx CATextArrowView CATextResponder CATableViewDelegate CATableViewDataSource CATableView CATableViewCell CAScrollViewDelegate CAScrollView CAIndicator CAScale9ImageView CARenderImage CAPullToRefreshView CAPickerViewDelegate CAPickerViewDataSource CAPickerView CAPageViewDelegate CAPageView CAListViewDelegate CAListViewDataSource CAListView CAListViewCell CALabelStyle CALabelStyleCache CALabel CAImageView CAGifView CADrawView CADatePickerViewDelegate CADatePickerView CACollectionViewDelegate CACollectionViewDataSource CACollectionView CACollectionViewCell CAClippingView CABatchView CAAlertView CAActivityIndicatorView CAAutoCollectionViewDelegate CAAutoCollectionViewDataSource CAAutoCollectionView CAWaterfallViewDataSource CAWaterfallViewDelegate CAWaterfallView CAWaterfallViewCell CACopying CAObject CAZone CAResponder CATimer CAScheduler DPoint DSize DRect CACamera CAAutoreleasePool CAPoolManager CAApplication CCDisplayLinkDirector CAVector CAList CADeque CAMap CAThread CALock CAAutoLock CASyncQueue CAVideoPlayerViewDelegate CAVideoPlayerView VPFrameRender VPFrameRenderRGB VPFrameRenderYUV VPFrame VPAudioFrame VPVideoFrame VPVideoFrameRGB VPVideoFrameYUV VPDecoder CAVideoPlayerControlViewDelegate CAVideoPlayerControlView CAViewAnimationModule CAViewAnimation JSViewController CCScriptHandlerEntry CCSchedulerScriptHandlerEntry CCTouchScriptHandlerEntry CCScriptEngineProtocol CCScriptEngineManager CAStepper CAPageControl CANavigationBarDelegate CANavigationBar CATabBarDelegate CABadgeView CATabBar CAButton CAControl CAProgress CASegmentedControl CASlider CASwitch CADrawerController CABarItem CABarButtonItem CANavigationBarItem CATabBarItem CAViewController CANavigationController CATabBarController CAKeypadDelegate CAKeypadHandler CAKeypadDispatcher CARGBAProtocol CAImageProtocol CCLabelProtocol CARGBAProtocol CAImageProtocol CCLabelProtocol CATouch CAEvent CCEGLTouchDelegate CATouchController CATouchDispatcher CACalendar CCSet CAGif CAImage CAImageCache CAImageAtlas CATextFieldDelegate CATextField CAEmojiFont CAClipboard

classes = CAView CAApplication CAWindow CAViewController CAButton CAControl CAAlertView CASegmentedControl CAImageView CAImage CAScale9ImageView CAActivityIndicatorView CAProgress CASlider CASwitch CAStepper CALabel CATouchView CAFont CATextField CATextView CABarItem CATabBarItem CATabBar CAPageView CAScrollView CAAutoCollectionView CATableView CAPickerView CAGifView CAGif CAFlashView CAFlash CADrawerController CANavigationController CCFileUtils SimpleAudioEngine ZipUtils ZipFile CAMediaDelegate CABlueToothDelegate CAWifiDelegate CAHttpResponse CAThread


android_headers = -I%(androidndkdir)s/platforms/android-14/arch-arm/usr/include -I%(androidndkdir)s/sources/cxx-stl/gnu-libstdc++/4.7/libs/armeabi-v7a/include -I%(androidndkdir)s/sources/cxx-stl/gnu-libstdc++/4.7/include -I%(androidndkdir)s/sources/cxx-stl/gnu-libstdc++/4.8/libs/armeabi-v7a/include -I%(androidndkdir)s/sources/cxx-stl/gnu-libstdc++/4.8/include
android_flags = -D_SIZE_T_DEFINED_

clang_headers = -I%(clangllvmdir)s/lib/clang/%(clang_version)s/include

clang_flags = -nostdinc -x c++ -std=c++11 -U __SSE__

cocos_headers = -I%(cocosdir)s/CrossApp -I%(cocosdir)s/CrossApp/platform/android -I%(cocosdir)s/CrossApp/platform -I%(cocosdir)s/CrossApp/kazmath/include -I%(cocosdir)s/CrossApp/the_third_party -I%(cocosdir)s/extensions -I%(cocosdir)s/CrossApp/support
cocos_flags = -DANDROID
extra_arguments = %(android_headers)s %(clang_headers)s %(cocos_headers)s %(android_flags)s %(clang_flags)s %(cocos_flags)s %(extra_flags)s


headers = %(cocosdir)s/CrossApp/CrossApp.h %(cocosdir)s/extensions/ExtensionMacros.h %(cocosdir)s/CocosDenshion/include/SimpleAudioEngine.h %(cocosdir)s/extensions/CrossAppExt.h %(cocosdir)s/CrossApp/support/zip_support/ZipUtils.h %(cocosdir)s/CrossApp/support/device/CADevice.h

target_namespace = ca
remove_prefix =


# what should we skip? in the format ClassName::[function function]
# ClassName is a regular expression, but will be used like this: "^ClassName$" functions are also
# regular expressions, they will not be surrounded by "^$". If you want to skip a whole class, just
# add a single "*" as functions. See bellow for several examples. A special class name is "*", which
# will apply to all class names. This is a convenience wildcard to be able to skip similar named
# functions from all classes.
# CALabel:setFont getFont（标示一下）  CAAutoLock （标示：构造函数参数CALock）  setVertexRect

skip = CAView::[setLayout getLayout initWithLayout getSubviews setAnchorPoint setAnchorPointInPoints setFrameOrigin setCenter setBounds setCenterOrigin convertRectToNodeSpace convertRectToWorldSpace convertToNodeSpace convertToWorldSpace convertToNodeSize convertToWorldSize updateDisplayedColor setPoint setImageRect setVertexRect setBatch getBatch setShaderProgram getShaderProgram nextResponder getImageAtlas setImageAtlas getContentContainer setContentContainer convertTouchToNodeSpace convertTouchToNodeSpaceAR getCamera],
       .*Delegate::[*],
       #CA.*::[createWithFrame createWithCenter createWithLayout setContentSize setBackgroundColor],
       CA.*::[createWithLayout],
       .*::[ccTouchBegan ccTouchMoved ccTouchEnded ccTouchCancelled mouseMoved mouseMovedOutSide mouseScrollWheel],
       CAResponder::[getTouches],
       #CAImageView::[createWithImage getAnimationImages],
       CAImageView::[getAnimationImages],
       CAImage::[drawAtPoint drawInRect setTexParameters],
       CATimer::[getScriptHandler getSelector],
       CAResponder::[getTouches],
       CAApplication::[^application.* ^run$ setAnimationInterval convertToGL convertToUI setAccelerometer getAccelerometer],
       CAWebView::[createWithFrame createWithCenter createWithLayout],
       CATableViewDataSource::[tableViewSectionViewForHeaderInSection tableViewSectionViewForFooterInSection],
       CAScrollView::[setContentOffset getScrollWindowNotOutPoint isScrollWindowNotMaxOutSide setContainerFrame getSubviews],
       CAIndicator::[setIndicator],
       CAScale9ImageView::[setColor getColor],
       CARenderImage::[printscreenWithView clear beginWithClear],
       CAPickerView::[viewForRowInComponent tableCellAtIndex],
       CADrawView::[drawDot drawSegment drawPolygon],
       CAAlertView::[addButton setTitle setAlertMessage tableCellAtIndex onClickButton setLabel],
       CARichLabel::[initWithFrame initWithCenter setLinkTextColor setLinkVisitedTextColor],
       CACamera::[getEyeXYZ getCenterXYZ getUpXYZ],
       CABarButtonItem::[getSel],
       CALabel::[getFont setFont],
       DPoint::[*],
       DSize::[*],
       DRect::[*],
       CAFont::[operator=],
       CATabBar::[getItems getForbidSelectedIndexs],
       CAPageView::[setViews],
       CAAutoCollectionView::[displayingCollectionCell],
       CATableView::[displayingTableCell],
       ComponentJS::[getScriptObject update],
       CCFileUtils::[setSearchPaths setSearchResolutionsOrder getSearchPaths getSearchResolutionsOrder],
       Component::[serialize onAdd onRemove update]


base_objects =
abstract_classes =
classes_have_type_info = no
rename =


rename_functions =

rename_classes =


# for all class names, should we remove something when registering in the target VM?
remove_prefix =

# classes for which there will be no "parent" lookup
classes_have_no_parents = CAView SimpleAudioEngine CAApplication GLViewProtocol Configuration CAViewController CCFileUtils SimpleAudioEngine

# base classes which will be skipped when their sub-classes found them.
base_classes_to_skip = CAObject

# classes that create no constructor
# Set is special and we will use a hand-written constructor

abstract_classes = CATouchView CAApplication CATextResponder CAAutoLock CAContentContainer

# Determining whether to use script object(js object) to control the lifecycle of native(cpp) object or the other way around. Supported values are 'yes' or 'no'.
script_control_cpp = no
