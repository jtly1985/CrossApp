#include "ccConfig.h"
#ifndef __autogentestbindings_js_h__
#define __autogentestbindings_js_h__

#include "jsapi.h"
#include "jsfriendapi.h"

extern JSClass  *jsb_CrossApp_CAImage_class;
extern JSObject *jsb_CrossApp_CAImage_prototype;

bool js_autogentestbindings_js_CAImage_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_autogentestbindings_js_CAImage_finalize(JSContext *cx, JSObject *obj);
void js_register_autogentestbindings_js_CAImage(JSContext *cx, JS::HandleObject global);
void register_all_autogentestbindings_js(JSContext* cx, JS::HandleObject obj);
bool js_autogentestbindings_js_CAImage_getShaderProgram(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_premultipliedImageData(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_initWithETCFile(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_stringForFormat(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_setMaxS(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_setShaderProgram(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_getMaxS(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_getAspectRatio(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_releaseData(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_hasPremultipliedAlpha(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_getPixelsWide(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_getPixelsHigh(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_freeName(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_isTiff(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_bitsPerPixelForFormat(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_getName(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_getGifImageIndex(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_setMaxT(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_initWithImageFile(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_getGifImageCounts(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_getContentSize(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_getMaxT(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_initWithImageFileThreadSafe(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_setAliasTexParameters(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_isPng(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_setAntiAliasTexParameters(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_generateMipmap(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_saveToFile(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_description(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_isMonochrome(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_initWithImageData(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_getPixelFormat(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_hasAlpha(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_isEtc(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_isWebp(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_updateGifImageWithIndex(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_copy(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_getImageFileType(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_initWithRawData(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_repremultipliedImageData(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_getData(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_detectFormat(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_hasMipmaps(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_getDataLenght(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_isJpg(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_isPvr(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_isGif(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_scaleToNewImageWithImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_CC_WHITE_IMAGE(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_getFontHeight(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_create(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_createWithRawData(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_cutStringByWidth(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_createWithImageDataNoCache(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_cutStringByDSize(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_createWithImageData(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_getStringHeight(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_getStringWidth(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_generateMipmapsWithImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_createWithRawDataNoCache(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_reloadAllImages(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_createWithString(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImage_CAImage(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CrossApp_CAView_class;
extern JSObject *jsb_CrossApp_CAView_prototype;

bool js_autogentestbindings_js_CAView_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_autogentestbindings_js_CAView_finalize(JSContext *cx, JSObject *obj);
void js_register_autogentestbindings_js_CAView(JSContext *cx, JS::HandleObject global);
void register_all_autogentestbindings_js(JSContext* cx, JS::HandleObject obj);
bool js_autogentestbindings_js_CAView_removeFromSuperview(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_getSuperview(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_getSubviewByTag(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_sortAllSubviews(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_copy(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_updateDisplayedAlpha(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_isFlipX(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_isFlipY(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_init(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_setRotation(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_setZOrder(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_setScaleY(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_setScaleX(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_getAtlasIndex(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_removeSubviewByTag(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_visitEve(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_onExit(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_setSuperview(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_setRotationX(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_getAlpha(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_setSkewX(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_setSkewY(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_removeSubview(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_onEnterTransitionDidFinish(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_removeAllSubviews(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_reViewlayout(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_getSubviewByTextTag(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_removeSubviewByTextTag(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_getFrame(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_getImageRect(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_nodeToParentTransform(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_getFrameOrigin(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_setDirty(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_setGLServerState(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_isImageRectRotated(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_setColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_getDisplayedColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_getAnchorPoint(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_updateTransform(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_getAnchorPointInPoints(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_onEnter(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_setAtlasIndex(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_getCenterOrigin(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_initWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_getRotation(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_getZOrder(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_visit(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_transform(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_setVertexZ(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_getSkewX(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_getSkewY(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_setRotationY(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_insertSubview(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_setFlipY(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_setFlipX(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_getCenter(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_isDirty(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_getRotationX(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_getOrderOfArrival(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_getRotationY(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_isRunning(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_setBlendFunc(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_getQuad(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_setVisible(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_reorderSubview(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_getVertexZ(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView__setZOrder(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_setScale(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_isDisplayRange(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_getDisplayedAlpha(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_setOrderOfArrival(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_getScaleY(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_getScaleX(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_addSubview(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_initWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_setDisplayRange(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_setAlpha(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_draw(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_getBlendFunc(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_transformAncestors(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_description(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_isVisible(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_update(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_onExitTransitionDidStart(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_getBounds(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_getScale(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_initWithColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_setFrame(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_getColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_getGLServerState(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_create(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_createWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_createWithColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_createWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAView_CAView(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CrossApp_CAImageView_class;
extern JSObject *jsb_CrossApp_CAImageView_prototype;

bool js_autogentestbindings_js_CAImageView_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_autogentestbindings_js_CAImageView_finalize(JSContext *cx, JSObject *obj);
void js_register_autogentestbindings_js_CAImageView(JSContext *cx, JS::HandleObject global);
void register_all_autogentestbindings_js(JSContext* cx, JS::HandleObject obj);
bool js_autogentestbindings_js_CAImageView_isAnimating(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImageView_getAnimationRepeatCount(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImageView_stopAnimating(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImageView_setImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImageView_copy(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImageView_initWithImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImageView_setAnimationImages(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImageView_setImageAsyncWithFile(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImageView_getImageViewScaleType(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImageView_init(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImageView_setImageViewScaleType(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImageView_getAnimationDuration(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImageView_startAnimating(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImageView_getImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImageView_setAnimationDuration(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImageView_setAnimationRepeatCount(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImageView_createWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImageView_create(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImageView_createWithImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImageView_createWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAImageView_CAImageView(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CrossApp_CAScale9ImageView_class;
extern JSObject *jsb_CrossApp_CAScale9ImageView_prototype;

bool js_autogentestbindings_js_CAScale9ImageView_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_autogentestbindings_js_CAScale9ImageView_finalize(JSContext *cx, JSObject *obj);
void js_register_autogentestbindings_js_CAScale9ImageView(JSContext *cx, JS::HandleObject global);
void register_all_autogentestbindings_js(JSContext* cx, JS::HandleObject obj);
bool js_autogentestbindings_js_CAScale9ImageView_setInsetBottom(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScale9ImageView_getOriginalSize(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScale9ImageView_draw(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScale9ImageView_setImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScale9ImageView_initWithImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScale9ImageView_getInsetTop(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScale9ImageView_setInsetLeft(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScale9ImageView_setCapInsets(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScale9ImageView_getCapInsets(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScale9ImageView_setInsetTop(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScale9ImageView_init(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScale9ImageView_setAlpha(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScale9ImageView_getInsetLeft(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScale9ImageView_getInsetBottom(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScale9ImageView_setInsetRight(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScale9ImageView_copy(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScale9ImageView_getInsetRight(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScale9ImageView_createWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScale9ImageView_create(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScale9ImageView_createWithImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScale9ImageView_createWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScale9ImageView_CAScale9ImageView(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CrossApp_CAControl_class;
extern JSObject *jsb_CrossApp_CAControl_prototype;

bool js_autogentestbindings_js_CAControl_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_autogentestbindings_js_CAControl_finalize(JSContext *cx, JSObject *obj);
void js_register_autogentestbindings_js_CAControl(JSContext *cx, JS::HandleObject global);
void register_all_autogentestbindings_js(JSContext* cx, JS::HandleObject obj);
bool js_autogentestbindings_js_CAControl_setControlStateSelected(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAControl_setControlStateHighlighted(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAControl_getControlState(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAControl_setControlStateNormal(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAControl_setControlState(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAControl_setControlStateLocked(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAControl_init(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAControl_getControlStateLocked(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAControl_setControlStateDisabled(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAControl_CAControl(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CrossApp_CATouchView_class;
extern JSObject *jsb_CrossApp_CATouchView_prototype;

bool js_autogentestbindings_js_CATouchView_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_autogentestbindings_js_CATouchView_finalize(JSContext *cx, JSObject *obj);
void js_register_autogentestbindings_js_CATouchView(JSContext *cx, JS::HandleObject global);
void register_all_autogentestbindings_js(JSContext* cx, JS::HandleObject obj);
bool js_autogentestbindings_js_CATouchView_ccTouchPress(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CrossApp_CAFont_class;
extern JSObject *jsb_CrossApp_CAFont_prototype;

bool js_autogentestbindings_js_CAFont_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_autogentestbindings_js_CAFont_finalize(JSContext *cx, JSObject *obj);
void js_register_autogentestbindings_js_CAFont(JSContext *cx, JS::HandleObject global);
void register_all_autogentestbindings_js(JSContext* cx, JS::HandleObject obj);
bool js_autogentestbindings_js_CAFont_CAFont(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CrossApp_CALabel_class;
extern JSObject *jsb_CrossApp_CALabel_prototype;

bool js_autogentestbindings_js_CALabel_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_autogentestbindings_js_CALabel_finalize(JSContext *cx, JSObject *obj);
void js_register_autogentestbindings_js_CALabel(JSContext *cx, JS::HandleObject global);
void register_all_autogentestbindings_js(JSContext* cx, JS::HandleObject obj);
bool js_autogentestbindings_js_CALabel_setTextAlignment(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CALabel_setDimensions(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CALabel_getText(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CALabel_isBold(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CALabel_setUnderLine(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CALabel_isDeleteLine(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CALabel_isItalics(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CALabel_setLineSpacing(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CALabel_setBold(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CALabel_isUnderLine(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CALabel_sizeToFit(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CALabel_getLabelSize(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CALabel_visitEve(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CALabel_getColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CALabel_getEnableCopy(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CALabel_getLineSpacing(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CALabel_setVerticalTextAlignmet(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CALabel_getVerticalTextAlignmet(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CALabel_setItalics(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CALabel_setWordWrap(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CALabel_getDimensions(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CALabel_getNumberOfLine(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CALabel_isWordWrap(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CALabel_setColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CALabel_setDeleteLine(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CALabel_unsizeToFit(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CALabel_setText(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CALabel_setEnableCopy(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CALabel_getTextAlignment(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CALabel_setNumberOfLine(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CALabel_create(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CALabel_createWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CALabel_createWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CALabel_CALabel(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CrossApp_CAApplication_class;
extern JSObject *jsb_CrossApp_CAApplication_prototype;

bool js_autogentestbindings_js_CAApplication_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_autogentestbindings_js_CAApplication_finalize(JSContext *cx, JSObject *obj);
void js_register_autogentestbindings_js_CAApplication(JSContext *cx, JS::HandleObject global);
void register_all_autogentestbindings_js(JSContext* cx, JS::HandleObject obj);
bool js_autogentestbindings_js_CAApplication_setDefaultValues(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_getStatusBarOrientation(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_getDeltaTime(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_setGLDefaultValues(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_setAlphaBlending(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_updateDraw(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_getKeypadDispatcher(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_getWinSize(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_end(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_runWindow(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_getNotificationView(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_getVisibleOrigin(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_mainLoop(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_isDrawing(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_setDepthTest(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_getSecondsPerFrame(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_getStatusBarStyle(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_init(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_reshapeProjection(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_startAnimation(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_getAdaptationRatio(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_getOpenGLView(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_setViewport(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_stopAnimation(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_getNumberOfDraws(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_setKeypadDispatcher(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_getProjection(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_resume(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_isStatusBarHidden(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_isNextDeltaTimeZero(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_setStatusBarStyle(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_setOpenGLView(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_purgeCachedData(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_getTotalFrames(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_pause(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_drawScene(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_setTouchDispatcher(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_isDisplayStats(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_setProjection(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_getTouchDispatcher(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_getZEye(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_setNextDeltaTimeZero(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_getVisibleSize(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_setNotificationView(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_getRootWindow(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_getClassTypeInfo(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_getAnimationInterval(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_isPaused(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_getCurrentNumberOfDraws(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_setDisplayStats(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAApplication_getApplication(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CrossApp_CAButton_class;
extern JSObject *jsb_CrossApp_CAButton_prototype;

bool js_autogentestbindings_js_CAButton_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_autogentestbindings_js_CAButton_finalize(JSContext *cx, JSObject *obj);
void js_register_autogentestbindings_js_CAButton(JSContext *cx, JS::HandleObject global);
void register_all_autogentestbindings_js(JSContext* cx, JS::HandleObject obj);
bool js_autogentestbindings_js_CAButton_setImageSize(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAButton_setTitleFontSize(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAButton_setTitleForState(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAButton_isAllowsSelected(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAButton_setBackgroundViewForState(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAButton_isSelected(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAButton_init(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAButton_setImageColorForState(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAButton_getImageForState(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAButton_setTitleLabelSize(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAButton_isTouchClick(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAButton_setTitleFontName(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAButton_onExitTransitionDidStart(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAButton_setTitleOffset(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAButton_setTitleColorForState(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAButton_getBackgroundViewForState(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAButton_interruptTouchState(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAButton_setImageOffset(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAButton_setControlState(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAButton_setImageForState(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAButton_onEnterTransitionDidFinish(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAButton_setAllowsSelected(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAButton_getTitleForState(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAButton_create(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAButton_createWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAButton_createWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAButton_CAButton(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CrossApp_CASegmentedControl_class;
extern JSObject *jsb_CrossApp_CASegmentedControl_prototype;

bool js_autogentestbindings_js_CASegmentedControl_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_autogentestbindings_js_CASegmentedControl_finalize(JSContext *cx, JSObject *obj);
void js_register_autogentestbindings_js_CASegmentedControl(JSContext *cx, JS::HandleObject global);
void register_all_autogentestbindings_js(JSContext* cx, JS::HandleObject obj);
bool js_autogentestbindings_js_CASegmentedControl_setTitleFontSize(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASegmentedControl_setSegmentItemBackgroundImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASegmentedControl_setTitleColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASegmentedControl_setSelectedAtIndex(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASegmentedControl_setImageForSegmentAtIndex(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASegmentedControl_setImageColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASegmentedControl_getSelectedAtIndex(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASegmentedControl_setTitleSelectedColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASegmentedControl_getNumberOfSegments(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASegmentedControl_setTitleForSegmentAtIndex(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASegmentedControl_setImageSizeAtIndex(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASegmentedControl_isEnabledForSegmentAtIndex(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASegmentedControl_setBackgroundImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASegmentedControl_setTitleFontName(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASegmentedControl_getTitleSelectedColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASegmentedControl_setImageSelectedColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASegmentedControl_getContentOffsetForSegmentAtIndex(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASegmentedControl_getImageSelectedColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASegmentedControl_init(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASegmentedControl_getImageForSegmentAtIndex(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASegmentedControl_setContentOffsetForSegmentAtIndex(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASegmentedControl_getTitleColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASegmentedControl_onExitTransitionDidStart(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASegmentedControl_setTintColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASegmentedControl_getTitleForSegmentAtIndex(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASegmentedControl_getImageColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASegmentedControl_onEnterTransitionDidFinish(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASegmentedControl_setEnabledForSegmentAtIndex(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASegmentedControl_create(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASegmentedControl_createWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASegmentedControl_createWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASegmentedControl_CASegmentedControl(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CrossApp_CABarItem_class;
extern JSObject *jsb_CrossApp_CABarItem_prototype;

bool js_autogentestbindings_js_CABarItem_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_autogentestbindings_js_CABarItem_finalize(JSContext *cx, JSObject *obj);
void js_register_autogentestbindings_js_CABarItem(JSContext *cx, JS::HandleObject global);
void register_all_autogentestbindings_js(JSContext* cx, JS::HandleObject obj);
bool js_autogentestbindings_js_CABarItem_setImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CABarItem_setTitle(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CABarItem_getImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CABarItem_getTitle(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CABarItem_CABarItem(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CrossApp_CATabBarItem_class;
extern JSObject *jsb_CrossApp_CATabBarItem_prototype;

bool js_autogentestbindings_js_CATabBarItem_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_autogentestbindings_js_CATabBarItem_finalize(JSContext *cx, JSObject *obj);
void js_register_autogentestbindings_js_CATabBarItem(JSContext *cx, JS::HandleObject global);
void register_all_autogentestbindings_js(JSContext* cx, JS::HandleObject obj);
bool js_autogentestbindings_js_CATabBarItem_getBadgeValue(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATabBarItem_setSelectedImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATabBarItem_getSelectedImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATabBarItem_init(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATabBarItem_setBadgeValue(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATabBarItem_create(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATabBarItem_CATabBarItem(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CrossApp_CATabBar_class;
extern JSObject *jsb_CrossApp_CATabBar_prototype;

bool js_autogentestbindings_js_CATabBar_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_autogentestbindings_js_CATabBar_finalize(JSContext *cx, JSObject *obj);
void js_register_autogentestbindings_js_CATabBar(JSContext *cx, JS::HandleObject global);
void register_all_autogentestbindings_js(JSContext* cx, JS::HandleObject obj);
bool js_autogentestbindings_js_CATabBar_setSelectedBackgroundImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATabBar_setSelectedIndicatorColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATabBar_getItemSize(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATabBar_replaceItemAtIndex(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATabBar_getSelectedIndicatorColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATabBar_getBackgroundColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATabBar_getContentViewFrame(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATabBar_setSelectedAtIndex(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATabBar_showSelectedIndicator(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATabBar_addForbidSelectedAtIndex(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATabBar_getSelectedIndex(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATabBar_setSelectedIndicatorImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATabBar_getTitleColorForNormal(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATabBar_getTitleColorForSelected(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATabBar_setItems(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATabBar_getBackgroundImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATabBar_setBackgroundImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATabBar_setBackgroundColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATabBar_setTitleColorForSelected(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATabBar_onExitTransitionDidStart(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATabBar_setDelegate(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATabBar_getSelectedBackgroundColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATabBar_setSelectedBackgroundColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATabBar_getDelegate(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATabBar_getSelectedIndicatorImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATabBar_setTitleColorForNormal(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATabBar_getSelectedBackgroundImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATabBar_onEnterTransitionDidFinish(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATabBar_createWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATabBar_createWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATabBar_CATabBar(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CrossApp_CAProgress_class;
extern JSObject *jsb_CrossApp_CAProgress_prototype;

bool js_autogentestbindings_js_CAProgress_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_autogentestbindings_js_CAProgress_finalize(JSContext *cx, JSObject *obj);
void js_register_autogentestbindings_js_CAProgress(JSContext *cx, JS::HandleObject global);
void register_all_autogentestbindings_js(JSContext* cx, JS::HandleObject obj);
bool js_autogentestbindings_js_CAProgress_setProgressTintImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAProgress_getProgressTintImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAProgress_setProgressTrackColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAProgress_setColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAProgress_setProgressTrackImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAProgress_getProgressTintColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAProgress_getProgressTrackImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAProgress_getProgressTrackColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAProgress_init(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAProgress_onExitTransitionDidStart(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAProgress_getProgress(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAProgress_setProgress(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAProgress_onEnterTransitionDidFinish(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAProgress_setProgressTintColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAProgress_create(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAProgress_createWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAProgress_createWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAProgress_CAProgress(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CrossApp_CASwitch_class;
extern JSObject *jsb_CrossApp_CASwitch_prototype;

bool js_autogentestbindings_js_CASwitch_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_autogentestbindings_js_CASwitch_finalize(JSContext *cx, JSObject *obj);
void js_register_autogentestbindings_js_CASwitch(JSContext *cx, JS::HandleObject global);
void register_all_autogentestbindings_js(JSContext* cx, JS::HandleObject obj);
bool js_autogentestbindings_js_CASwitch_getOnImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASwitch_setOffImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASwitch_isTouchClick(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASwitch_getThumbTintImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASwitch_setIsOn(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASwitch_isOn(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASwitch_setOnImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASwitch_init(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASwitch_onExitTransitionDidStart(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASwitch_getOffImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASwitch_onEnterTransitionDidFinish(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASwitch_setThumbTintImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASwitch_create(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASwitch_createWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASwitch_createWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASwitch_CASwitch(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CrossApp_CASlider_class;
extern JSObject *jsb_CrossApp_CASlider_prototype;

bool js_autogentestbindings_js_CASlider_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_autogentestbindings_js_CASlider_finalize(JSContext *cx, JSObject *obj);
void js_register_autogentestbindings_js_CASlider(JSContext *cx, JS::HandleObject global);
void register_all_autogentestbindings_js(JSContext* cx, JS::HandleObject obj);
bool js_autogentestbindings_js_CASlider_initWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASlider_getTrackHeight(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASlider_setMinValue(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASlider_getMinValue(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASlider_init(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASlider_getMaxValue(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASlider_setMaxTrackTintImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASlider_setValue(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASlider_isTouchClick(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASlider_initWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASlider_layoutSubViews(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASlider_onExitTransitionDidStart(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASlider_setThumbTintImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASlider_getMinTrackTintImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASlider_setTrackHeight(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASlider_getThumbTintImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASlider_setMaxValue(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASlider_getValue(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASlider_getMaxTrackTintImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASlider_setMinTrackTintImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASlider_onEnterTransitionDidFinish(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASlider_create(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASlider_createWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASlider_createWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CASlider_CASlider(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CrossApp_CAStepper_class;
extern JSObject *jsb_CrossApp_CAStepper_prototype;

bool js_autogentestbindings_js_CAStepper_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_autogentestbindings_js_CAStepper_finalize(JSContext *cx, JSObject *obj);
void js_register_autogentestbindings_js_CAStepper(JSContext *cx, JS::HandleObject global);
void register_all_autogentestbindings_js(JSContext* cx, JS::HandleObject obj);
bool js_autogentestbindings_js_CAStepper_onEnter(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAStepper_setMinValue(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAStepper_getBackgroundImageForState(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAStepper_setWraps(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAStepper_setValue(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAStepper_setTailorImageAtIndex(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAStepper_getContinuous(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAStepper_getTailorImageAtIndex(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAStepper_getAutoRepeat(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAStepper_setContinuous(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAStepper_getMinValue(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAStepper_init(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAStepper_getIncrementImageForState(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAStepper_setDividerColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAStepper_getDecrementImageForState(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAStepper_getMaxValue(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAStepper_setDecrementImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAStepper_getWraps(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAStepper_setStepValue(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAStepper_setBackgroundImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAStepper_setAutoRepeat(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAStepper_removeAllTargets(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAStepper_getDividerColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAStepper_setTouchEffect(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAStepper_onExit(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAStepper_setIncrementImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAStepper_getStepValue(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAStepper_setMaxValue(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAStepper_getValue(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAStepper_visit(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAStepper_getTouchEffect(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAStepper_create(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAStepper_createWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAStepper_createWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAStepper_CAStepper(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CrossApp_CAActivityIndicatorView_class;
extern JSObject *jsb_CrossApp_CAActivityIndicatorView_prototype;

bool js_autogentestbindings_js_CAActivityIndicatorView_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_autogentestbindings_js_CAActivityIndicatorView_finalize(JSContext *cx, JSObject *obj);
void js_register_autogentestbindings_js_CAActivityIndicatorView(JSContext *cx, JS::HandleObject global);
void register_all_autogentestbindings_js(JSContext* cx, JS::HandleObject obj);
bool js_autogentestbindings_js_CAActivityIndicatorView_setCycleTime(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAActivityIndicatorView_draw(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAActivityIndicatorView_onEnter(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAActivityIndicatorView_onExit(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAActivityIndicatorView_getActivityBackView(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAActivityIndicatorView_getActivityIndicatorView(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAActivityIndicatorView_setTimesOneCycle(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAActivityIndicatorView_getColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAActivityIndicatorView_visit(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAActivityIndicatorView_setActivityBackView(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAActivityIndicatorView_setStyle(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAActivityIndicatorView_setLoadingMinTime(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAActivityIndicatorView_init(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAActivityIndicatorView_isAnimating(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAActivityIndicatorView_setActivityIndicatorView(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAActivityIndicatorView_getLoadingMinTime(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAActivityIndicatorView_startAnimating(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAActivityIndicatorView_stopAnimating(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAActivityIndicatorView_create(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAActivityIndicatorView_createWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAActivityIndicatorView_createWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAActivityIndicatorView_CAActivityIndicatorView(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CrossApp_CAScrollView_class;
extern JSObject *jsb_CrossApp_CAScrollView_prototype;

bool js_autogentestbindings_js_CAScrollView_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_autogentestbindings_js_CAScrollView_finalize(JSContext *cx, JSObject *obj);
void js_register_autogentestbindings_js_CAScrollView(JSContext *cx, JS::HandleObject global);
void register_all_autogentestbindings_js(JSContext* cx, JS::HandleObject obj);
bool js_autogentestbindings_js_CAScrollView_setBounceVertical(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_removeAllSubviews(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_isTracking(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_startDeaccelerateScroll(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_isBounceVertical(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_isShowsScrollIndicators(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_setShowsHorizontalScrollIndicator(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_setTouchEnabledAtSubviews(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_getZoomScale(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_isDecelerating(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_endFooterRefresh(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_isBounceHorizontal(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_setFooterRefreshView(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_getHeaderRefreshView(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_addSubview(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_setShowsVerticalScrollIndicator(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_init(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_isShowsVerticalScrollIndicator(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_startPullToHeaderRefreshView(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_getMultitouchGesture(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_setHeaderRefreshView(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_getScrollViewDelegate(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_setBounces(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_getContentOffset(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_setViewSize(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_insertSubview(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_setShowsScrollIndicators(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_removeSubviewByTag(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_getSubviewByTag(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_isBounces(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_setBackgroundColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_getMaximumZoomScale(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_getViewSize(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_setMaximumZoomScale(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_onExitTransitionDidStart(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_isReachBoundaryDown(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_isZooming(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_setBackgroundImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_isShowsHorizontalScrollIndicator(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_switchPCMode(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_isReachBoundaryUp(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_isReachBoundaryLeft(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_getFooterRefreshView(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_stopDeaccelerateScroll(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_setScrollViewDelegate(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_isTouchEnabledAtSubviews(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_isReachBoundaryRight(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_setMinimumZoomScale(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_endHeaderRefresh(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_getMinimumZoomScale(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_setBounceHorizontal(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_removeSubview(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_setZoomScale(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_onEnterTransitionDidFinish(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_setMultitouchGesture(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_createWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_createWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAScrollView_CAScrollView(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CAPageView_class;
extern JSObject *jsb_CAPageView_prototype;

bool js_autogentestbindings_js_CAPageView_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_autogentestbindings_js_CAPageView_finalize(JSContext *cx, JSObject *obj);
void js_register_autogentestbindings_js_CAPageView(JSContext *cx, JS::HandleObject global);
void register_all_autogentestbindings_js(JSContext* cx, JS::HandleObject obj);
bool js_autogentestbindings_js_CAPageView_setPageViewDelegate(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPageView_setSpacing(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPageView_setShowsScrollIndicators(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPageView_getOrientation(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPageView_getSpacing(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPageView_getCurrPage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPageView_init(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPageView_getPageViewDelegate(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPageView_getPageCount(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPageView_setCurrPage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPageView_getSubViewAtIndex(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPageView_createWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPageView_createWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPageView_CAPageView(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CrossApp_CAViewController_class;
extern JSObject *jsb_CrossApp_CAViewController_prototype;

bool js_autogentestbindings_js_CAViewController_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_autogentestbindings_js_CAViewController_finalize(JSContext *cx, JSObject *obj);
void js_register_autogentestbindings_js_CAViewController(JSContext *cx, JS::HandleObject global);
void register_all_autogentestbindings_js(JSContext* cx, JS::HandleObject obj);
bool js_autogentestbindings_js_CAViewController_getView(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAViewController_dismissModalViewController(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAViewController_getTabBarItem(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAViewController_keyBackClicked(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAViewController_setTabBarItem(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAViewController_getViewWithID(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAViewController_setTitle(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAViewController_isKeypadEnabled(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAViewController_isViewRunning(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAViewController_viewDidLoad(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAViewController_presentModalViewController(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAViewController_init(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAViewController_getNavigationBarItem(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAViewController_removeViewFromSuperview(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAViewController_viewDidDisappear(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAViewController_getNibName(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAViewController_setNavigationBarItem(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAViewController_nextResponder(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAViewController_getTitle(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAViewController_viewDidAppear(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAViewController_addViewFromSuperview(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAViewController_getNavigationController(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAViewController_getTabBarController(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAViewController_viewDidUnload(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAViewController_setKeypadEnabled(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAViewController_keyMenuClicked(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAViewController_CAViewController(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CrossApp_CAGif_class;
extern JSObject *jsb_CrossApp_CAGif_prototype;

bool js_autogentestbindings_js_CAGif_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_autogentestbindings_js_CAGif_finalize(JSContext *cx, JSObject *obj);
void js_register_autogentestbindings_js_CAGif(JSContext *cx, JS::HandleObject global);
void register_all_autogentestbindings_js(JSContext* cx, JS::HandleObject obj);
bool js_autogentestbindings_js_CAGif_getImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAGif_initWithFilePath(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAGif_initWithData(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAGif_setGifImageWithIndex(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAGif_getGifImageIndex(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAGif_getHeight(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAGif_getWidth(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAGif_getImageDuration(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAGif_getGifImageCounts(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAGif_nextGifImageIndex(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAGif_createWithFilePath(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAGif_createWithData(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAGif_CAGif(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CrossApp_CAWindow_class;
extern JSObject *jsb_CrossApp_CAWindow_prototype;

bool js_autogentestbindings_js_CAWindow_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_autogentestbindings_js_CAWindow_finalize(JSContext *cx, JSObject *obj);
void js_register_autogentestbindings_js_CAWindow(JSContext *cx, JS::HandleObject global);
void register_all_autogentestbindings_js(JSContext* cx, JS::HandleObject obj);
bool js_autogentestbindings_js_CAWindow_presentModalViewController(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAWindow_setRootViewController(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAWindow_getRootViewController(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAWindow_init(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAWindow_dismissModalViewController(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAWindow_getModalViewController(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAWindow_create(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAWindow_CAWindow(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CrossApp_CAGifView_class;
extern JSObject *jsb_CrossApp_CAGifView_prototype;

bool js_autogentestbindings_js_CAGifView_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_autogentestbindings_js_CAGifView_finalize(JSContext *cx, JSObject *obj);
void js_register_autogentestbindings_js_CAGifView(JSContext *cx, JS::HandleObject global);
void register_all_autogentestbindings_js(JSContext* cx, JS::HandleObject obj);
bool js_autogentestbindings_js_CAGifView_setTimes(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAGifView_initWithGif(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAGifView_init(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAGifView_setGif(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAGifView_isRepeatForever(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAGifView_setRepeatForever(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAGifView_createWithGif(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAGifView_createWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAGifView_createWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAGifView_CAGifView(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CrossApp_CATableView_class;
extern JSObject *jsb_CrossApp_CATableView_prototype;

bool js_autogentestbindings_js_CATableView_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_autogentestbindings_js_CATableView_finalize(JSContext *cx, JSObject *obj);
void js_register_autogentestbindings_js_CATableView(JSContext *cx, JS::HandleObject global);
void register_all_autogentestbindings_js(JSContext* cx, JS::HandleObject obj);
bool js_autogentestbindings_js_CATableView_getTableFooterView(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_isAllowsSelection(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_getSectionFooterHeightInSection(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_setSeparatorColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_setTableFooterHeight(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_setTableHeaderHeight(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_setAlwaysTopSectionHeader(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_isAlwaysBottomSectionFooter(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_getRowHeightInSectionInRow(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_setTableHeaderView(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_getNumberOfSections(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_getSeparatorViewHeight(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_init(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_setSelectRowAtIndexPath(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_getTableViewDataSource(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_getSectionHeightInSection(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_isAllowsMultipleSelection(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_getSeparatorColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_setAllowsSelection(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_reloadData(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_setAllowsMultipleSelection(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_getTableFooterHeight(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_setShowsScrollIndicators(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_cellForRowAtIndexPath(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_getTableHeaderView(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_setAlwaysBottomSectionFooter(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_onExitTransitionDidStart(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_isAlwaysTopSectionHeader(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_setTableFooterView(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_setSeparatorViewHeight(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_setTableViewDelegate(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_setTableViewDataSource(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_getNumberOfRowsInSection(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_setUnSelectRowAtIndexPath(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_onEnterTransitionDidFinish(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_getSectionHeaderHeightInSection(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_switchPCMode(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_dequeueReusableCellWithIdentifier(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_getTableViewDelegate(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_getTableHeaderHeight(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_createWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_createWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATableView_CATableView(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CrossApp_CAAutoCollectionView_class;
extern JSObject *jsb_CrossApp_CAAutoCollectionView_prototype;

bool js_autogentestbindings_js_CAAutoCollectionView_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_autogentestbindings_js_CAAutoCollectionView_finalize(JSContext *cx, JSObject *obj);
void js_register_autogentestbindings_js_CAAutoCollectionView(JSContext *cx, JS::HandleObject global);
void register_all_autogentestbindings_js(JSContext* cx, JS::HandleObject obj);
bool js_autogentestbindings_js_CAAutoCollectionView_setCollectionFooterHeight(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_isAllowsSelection(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_getCellVertAlign(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_setCollectionHeaderView(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_getOrientation(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_setCollectionFooterView(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_getCollectionFooterView(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_setHoriCellInterval(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_getCellHoriAlign(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_getVertMargins(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_isAlwaysBottomSectionFooter(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_setCollectionViewDelegate(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_setCellHoriAlign(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_setSelectRowAtIndexPath(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_init(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_getHoriCellInterval(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_isAllowsMultipleSelection(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_setVertMargins(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_setAllowsSelection(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_reloadData(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_setAllowsMultipleSelection(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_getCollectionHeaderView(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_setCollectionViewDataSource(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_setAlwaysTopSectionHeader(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_setShowsScrollIndicators(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_cellForRowAtIndexPath(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_getCollectionViewDataSource(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_setAlwaysBottomSectionFooter(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_onExitTransitionDidStart(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_setCellVertAlign(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_isAlwaysTopSectionHeader(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_getCollectionHeaderHeight(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_setOrientation(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_getCollectionViewDelegate(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_getVertCellInterval(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_getCollectionFooterHeight(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_setHoriMargins(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_setCollectionHeaderHeight(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_setUnSelectRowAtIndexPath(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_getHighlightCollectionCell(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_setVertCellInterval(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_switchPCMode(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_getHoriMargins(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_dequeueReusableCellWithIdentifier(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_onEnterTransitionDidFinish(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_createWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_createWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAutoCollectionView_CAAutoCollectionView(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CrossApp_CAAlertView_class;
extern JSObject *jsb_CrossApp_CAAlertView_prototype;

bool js_autogentestbindings_js_CAAlertView_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_autogentestbindings_js_CAAlertView_finalize(JSContext *cx, JSObject *obj);
void js_register_autogentestbindings_js_CAAlertView(JSContext *cx, JS::HandleObject global);
void register_all_autogentestbindings_js(JSContext* cx, JS::HandleObject obj);
bool js_autogentestbindings_js_CAAlertView_hide(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAlertView_show(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAlertView_setMessageFontName(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAlertView_create(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAlertView_hideWithDisplayed(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAAlertView_CAAlertView(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CrossApp_CAPickerView_class;
extern JSObject *jsb_CrossApp_CAPickerView_prototype;

bool js_autogentestbindings_js_CAPickerView_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_autogentestbindings_js_CAPickerView_finalize(JSContext *cx, JSObject *obj);
void js_register_autogentestbindings_js_CAPickerView(JSContext *cx, JS::HandleObject global);
void register_all_autogentestbindings_js(JSContext* cx, JS::HandleObject obj);
bool js_autogentestbindings_js_CAPickerView_setFontSizeNormal(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPickerView_getFontSizeNormal(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPickerView_getPickerViewDataSource(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPickerView_reloadAllComponents(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPickerView_getPickerViewDelegate(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPickerView_getFontSizeSelected(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPickerView_init(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPickerView_reloadComponent(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPickerView_getFontColorSelected(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPickerView_visitEve(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPickerView_setBackgroundColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPickerView_setFontColorNormal(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPickerView_onExitTransitionDidStart(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPickerView_numberOfRowsInComponent(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPickerView_getSeparateColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPickerView_selectRow(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPickerView_setPickerViewDataSource(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPickerView_numberOfComponents(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPickerView_setFontColorSelected(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPickerView_rowSizeForComponent(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPickerView_selectedRowInComponent(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPickerView_setSeparateColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPickerView_setPickerViewDelegate(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPickerView_getFontColorNormal(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPickerView_onEnterTransitionDidFinish(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPickerView_viewForRow(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPickerView_setFontSizeSelected(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPickerView_create(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPickerView_createWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPickerView_createWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CAPickerView_CAPickerView(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CrossApp_CATextField_class;
extern JSObject *jsb_CrossApp_CATextField_prototype;

bool js_autogentestbindings_js_CATextField_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_autogentestbindings_js_CATextField_finalize(JSContext *cx, JSObject *obj);
void js_register_autogentestbindings_js_CATextField(JSContext *cx, JS::HandleObject global);
void register_all_autogentestbindings_js(JSContext* cx, JS::HandleObject obj);
bool js_autogentestbindings_js_CATextField_getFontSize(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_setKeyboardType(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_getText(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_setClearButtonMode(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_getTextColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_getKeyboardType(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_isSecureTextEntry(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_getMaxLenght(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_setTextFieldAlign(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_setMarginImageLeft(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_init(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_setMarginRight(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_getClearButtonMode(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_getReturnType(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_getPlaceHolderText(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_setAllowkeyBoardHide(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_getPlaceHolderColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_setPlaceHolderText(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_setBackgroundImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_getMarginRight(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_onExitTransitionDidStart(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_setMarginLeft(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_setDelegate(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_setFontSize(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_setPlaceHolderColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_setTextColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_setReturnType(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_getDelegate(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_resignFirstResponder(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_setText(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_getTextFieldAlign(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_setMarginImageRight(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_getMarginLeft(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_setMaxLenght(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_becomeFirstResponder(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_setSecureTextEntry(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_isAllowkeyBoardHide(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_onEnterTransitionDidFinish(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_createWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_createWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextField_CATextField(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CrossApp_CATextView_class;
extern JSObject *jsb_CrossApp_CATextView_prototype;

bool js_autogentestbindings_js_CATextView_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_autogentestbindings_js_CATextView_finalize(JSContext *cx, JSObject *obj);
void js_register_autogentestbindings_js_CATextView(JSContext *cx, JS::HandleObject global);
void register_all_autogentestbindings_js(JSContext* cx, JS::HandleObject obj);
bool js_autogentestbindings_js_CATextView_setTextViewAlign(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextView_getDelegate(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextView_getTextFontSize(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextView_resignFirstResponder(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextView_setBackgroundImage(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextView_setText(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextView_setReturnType(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextView_onExitTransitionDidStart(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextView_getTextColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextView_becomeFirstResponder(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextView_getText(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextView_setDelegate(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextView_setTextColor(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextView_setTextFontSize(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextView_getReturnType(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextView_onEnterTransitionDidFinish(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextView_getTextViewAlign(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextView_createWithFrame(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextView_createWithCenter(JSContext *cx, uint32_t argc, jsval *vp);
bool js_autogentestbindings_js_CATextView_CATextView(JSContext *cx, uint32_t argc, jsval *vp);

#endif // __autogentestbindings_js_h__
